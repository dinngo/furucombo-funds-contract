image: node:14-buster

cache: &global_cache
  key: ${CI_PROJECT_PATH_SLUG}
  paths:

.job_template: &test-configuration
  stage: test
  tags:
    - docker
  before_script:
    - yarn
    - yarn build
    - apt-get update && apt-get install -y netcat
    - npm config set user 0
    - RUNNER_COUNT=15
    - FILES=( $(find -H -L ./test/* -regex "^.*.test.ts") )
    - len=${#FILES[@]}
    - >
      for (( i=0; i<${RUNNER_COUNT}; i+=1 )); do
          RUNNER_TEST_CNTS[$i]=0
      done
    - >
      for (( i=0; i<${len}; i+=1 )); do
          TestCases[$i]=$(grep -o " it" ${FILES[$i]} | wc -l)
      done
    - >
      for ((i = 0; i<${len}; i++))
      do
          for((j = 0; j<${len}-i-1; j++))
          do
              if [ ${TestCases[j]} -lt ${TestCases[$((j+1))]} ]
              then
                  # swap
                  temp=${TestCases[j]}
                  TestCases[$j]=${TestCases[$((j+1))]}
                  TestCases[$((j+1))]=$temp

                  temp=${FILES[j]}
                  FILES[$j]=${FILES[$((j+1))]}
                  FILES[$((j+1))]=$temp
              fi
          done
      done
    - MIN=${RUNNER_TEST_CNTS[0]}
    - MINIDX=0
    - >
      for (( i=0; i<${len}; i+=1 )); do
          for j in ${!RUNNER_TEST_CNTS[@]};
          do
              if [ ${MIN} -gt ${RUNNER_TEST_CNTS[$j]} ]
              then
                  MIN=${RUNNER_TEST_CNTS[${j}]}
                  MINIDX=${j}
              fi
          done

          UNITTEST_FILES[$MINIDX]+=' '"${FILES[$i]}"
          RUNNER_TEST_CNTS[$MINIDX]=`expr ${TestCases[$i]} + ${RUNNER_TEST_CNTS[$MINIDX]}`
          MIN=${RUNNER_TEST_CNTS[$MINIDX]}
      done
  dependencies:
    - build

stages:
  - build
  - test
  - deploy

build:
  stage: build
  tags:
    - docker
  script:
    - yarn
    - yarn build
    - yarn check-compile

test_0:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[0]}

test_1:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[1]}

test_2:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[2]}

test_3:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[3]}

test_4:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[4]}

test_5:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[5]}

test_6:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[6]}

test_7:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[7]}

test_8:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[8]}

test_9:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[9]}

test_10:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[10]}

test_11:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[11]}

test_12:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[12]}

test_13:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[13]}

test_14:
  <<: *test-configuration
  script:
    - yarn test ${UNITTEST_FILES[14]}

deploy:
  stage: deploy
  tags:
    - docker
  script:
    - yarn
    - yarn build
    - apt-get update && apt-get install -y netcat
    - yarn deploy
  dependencies:
    - build
